version: '3.8'

services:
  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_MULTIPLE_DATABASES: 'keycloak,banco'
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - 5432:5432  
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5 
    networks:
      - docker-network     
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.7
    restart: always
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/realm-export.json 
      KC_DB: postgres
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: root
      KC_DB_URL_HOST: db
      KC_DB_URL_PORT: 5432
      KC_DB_SCHEMA: public      
    ports:
      - 8080:8080
    depends_on:
      - db
    entrypoint: ["/opt/keycloak/bin/import-realm.sh"] 
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./import-realm.sh:/opt/keycloak/bin/import-realm.sh
    networks:
      - docker-network 
  app:
    build: ./conta
    container_name: desafio-banco-app
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/banco
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      keycloak-host: keycloak:8080 
    ports:
      - "8084:8084"
    networks:
      - docker-network  
    depends_on:
      - db
      - keycloak    
volumes:
  postgres_data:  
  
networks:
  docker-network:
    driver: bridge
